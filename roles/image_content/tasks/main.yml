---
- name: Ensure Image Path Exists
  file:
    path: "{{ libvirt_images_path }}"
    state: directory
    recurse: yes
  run_once: true
  delegate_to: "{{item}}"
  with_items: "{{groups['hypervisor']}}"

- name: Download Base Cloud Image[s] to Hypervisor (with sha256sum check)
  get_url:
    url: "{{ host_image_uri }}" 
    dest: "{{ libvirt_images_path }}/{{ host_image_uri | basename }}"
    checksum: "{{ host_image_checksum }}"
    force: no
  run_once: true
  delegate_to: "{{item}}"
  with_items: "{{groups['hypervisor']}}"
  when: "host_image_checksum is defined"

- name: Download Base Cloud Image[s] to Hypervisor
  get_url:
    url: "{{ host_image_uri }}" 
    dest: "{{ libvirt_images_path }}/{{ host_image_uri | basename }}"
    force: no
  run_once: true
  delegate_to: "{{item}}"
  with_items: "{{groups['hypervisor']}}"
  when: "host_image_checksum is undefined"

- name: Create Host Cloud Images
  command: "cp {{ host_image_uri | basename }} {{ inventory_hostname }}.qcow"
  args:
    chdir: "{{ libvirt_images_path }}"
    creates: "{{ libvirt_images_path }}/{{ inventory_hostname }}.qcow"
  delegate_to: "{{item}}"
  with_items: "{{groups['hypervisor']}}"

- name: Extend Image's Storage
  command: "qemu-img resize {{ libvirt_images_path }}/{{ inventory_hostname }}.qcow +{{ hostvars[inventory_hostname]['storage_extend'] }}"
  when: "hostvars[inventory_hostname]['storage_extend'] is defined"
  delegate_to: "{{item}}"
  with_items: "{{groups['hypervisor']}}"

- include_vars:
    file: roles/network_bridge/defaults/main.yml
  run_once: true

- name: Ensure Host temp Path Exists
  file:
    path: "/tmp/{{ inventory_hostname }}"
    state: directory
    recurse: yes
  delegate_to: "{{item}}"
  with_items: "{{groups['hypervisor']}}"

- name: Create user-data config 
  template:
    src: roles/image_content/templates/user-data.j2
    dest: "/tmp/{{ inventory_hostname }}/user-data"
  delegate_to: "{{item}}"
  with_items: "{{groups['hypervisor']}}"

- name: Create meta-data config 
  template:
    src: roles/image_content/templates/meta-data.j2
    dest: "/tmp/{{ inventory_hostname }}/meta-data"
  delegate_to: "{{item}}"
  with_items: "{{groups['hypervisor']}}"

- name: Build cloud-init ISO
  shell: genisoimage -output "/tmp/{{ inventory_hostname }}/cidata.iso" -volid cidata -joliet -rock "/tmp/{{ inventory_hostname }}/user-data" "/tmp/{{ inventory_hostname }}/meta-data"
  args: 
    creates: "/tmp/{{ inventory_hostname }}/cidata.iso" 
  delegate_to: "{{item}}"
  with_items: "{{groups['hypervisor']}}"

